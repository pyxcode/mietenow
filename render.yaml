# üöÄ Configuration Render pour MieteNow
# Ce fichier d√©crit tous les services n√©cessaires pour d√©ployer l'application

services:
  # üåê Application Web Next.js
  - type: web
    name: mietenow-web
    env: node
    region: frankfurt
    plan: starter
    buildCommand: npm ci && npm run build
    startCommand: npm start
    healthCheckPath: /
    # Mode serveur uniquement (pas de prerendering)
    runtime: node
    envVars:
      - key: NEXT_PUBLIC_APP_URL
        fromService:
          type: web
          name: mietenow-web
          property: host

  # üîÑ Cron Job - Multi-Site Scraping (all 20 sites)
  - type: cron
    name: mietenow-multi-site-scraper
    env: node
    region: frankfurt
    plan: starter
    schedule: "*/30 * * * *"  # Toutes les 30 minutes
    buildCommand: npm install
    startCommand: node scripts/cron-multi-site-scraping.js
    envVars:
      - key: MONGODB_URI
        sync: false
      - key: MONGODB_URI2
        sync: false

# üîÑ Cron Job - Optimized Scraping Every 5 Minutes
- type: cron
  name: mietenow-optimized-scraping
  env: node
  region: frankfurt
  plan: starter
  schedule: "*/5 * * * *"  # Every 5 minutes
  buildCommand: npm install
  startCommand: node scripts/optimized-cron.js
  envVars:
    - key: MONGODB_URI
      sync: false
    - key: MONGODB_URI2
      sync: false
    - key: OPENAI_API_KEY
      sync: false
    - key: APIKEYSENDGRID
      sync: false
    - key: SENDGRID_FROM_EMAIL
      sync: false
    - key: OPENAI_SCRAPING_ENABLED
      sync: false
      description: "Activer/d√©sactiver le scraping OpenAI (true/false, d√©faut: true)"

# üßπ Cron Job - Database Cleanup Every Night at 2 AM
- type: cron
  name: mietenow-cleanup-database
  env: node
  region: frankfurt
  plan: starter
  schedule: "0 2 * * *"  # Every day at 2 AM
  buildCommand: npm install
  startCommand: node scripts/cleanup-database.js
  envVars:
    - key: MONGODB_URI
      sync: false
    - key: MONGODB_URI2
      sync: false



  # üí∞ Cron Job - V√©rification des plans
  - type: cron
    name: mietenow-plans
    env: node
    region: frankfurt
    plan: starter
    schedule: "0 1 * * *"  # Tous les jours √† 1h du matin
    buildCommand: npm install
    startCommand: node scripts/cron-check-plans.js
    envVars: []

  # üìß Cron Job - Envoi des emails de paiement impay√©
  - type: cron
    name: mietenow-unpaid
    env: node
    region: frankfurt
    plan: starter
    schedule: "0 9 * * 1"  # Tous les lundis √† 9h
    buildCommand: npm install
    startCommand: node scripts/cron-send-unpaid.js
    envVars: []

  # üßπ Cron Job - Nettoyage quotidien simple
  - type: cron
    name: mietenow-daily-cleanup
    env: node
    region: frankfurt
    plan: starter
    schedule: "0 3 * * *"  # Tous les jours √† 3h du matin
    buildCommand: npm install
    startCommand: node scripts/cron-daily-cleanup.js
    envVars: []

  # ‚ö° Cron Job - T√¢ches horaires simples
  - type: cron
    name: mietenow-hourly
    env: node
    region: frankfurt
    plan: starter
    schedule: "0 * * * *"  # Toutes les heures
    buildCommand: npm install
    startCommand: node scripts/cron-hourly-simple.js
    envVars: []

# üîß Variables d'environnement partag√©es
# Ces variables doivent √™tre configur√©es dans le dashboard Render
envVars:
  - key: MONGODB_URI
    description: "URI de connexion MongoDB Atlas"
  - key: JWT_SECRET
    description: "Cl√© secr√®te pour JWT"
  - key: NEXTAUTH_SECRET
    description: "Cl√© secr√®te pour NextAuth"
  - key: NEXTAUTH_URL
    description: "URL de l'application"
  - key: APIKEYSENDGRID
    description: "Cl√© API SendGrid pour les emails"
  - key: SENDGRID_FROM_EMAIL
    description: "Email d'exp√©diteur SendGrid"
  - key: NEXT_PUBLIC_STRIPE_API
    description: "Cl√© publique Stripe"
  - key: STRIPE_SECRET_KEY
    description: "Cl√© secr√®te Stripe"
  - key: STRIPE_WEBHOOK_SECRET
    description: "Secret webhook Stripe"
  - key: CLOUDINARY_URL
    description: "URL Cloudinary pour les images"
  - key: BRIGHT_DATA_USERNAME
    description: "Nom d'utilisateur Bright Data"
  - key: BRIGHT_DATA_PASSWORD
    description: "Mot de passe Bright Data"
  - key: BRIGHT_DATA_ENDPOINT
    description: "Endpoint Bright Data"
  - key: BROWSERLESS_TOKEN
    description: "Token Browserless.io pour le scraping"

